{
 "appConfig": {},
 "application": "opsmx-gitops",
 "description": "This pipe backs up  the postgres db used by isd. The script that backs up is in github. Before you run this pipe, make sure the byos-set-up-pipe is run and the secrets for github and postgres are created. Choose the parameters accordingly. more info at https://github.com/OpsMx/byos/blob/main/Postgres/Readme.md",
 "id": "18a35f3e-8059-4915-93f8-5a468cd6b522",
 "index": 4,
 "keepWaitingPipelines": false,
 "lastModifiedBy": "admin",
 "limitConcurrent": true,
 "name": "byos-Postgress-DB-Backup-PVC",
 "parameterConfig": [
  {
   "default": "byostest",
   "description": "",
   "hasOptions": false,
   "label": "",
   "name": "namespace",
   "options": [
    {
     "value": ""
    }
   ],
   "pinned": true,
   "required": false
  }
 ],
 "spelEvaluator": "v4",
 "stages": [
  {
   "account": "default",
   "alias": "runJob",
   "application": "byos",
   "cloudProvider": "kubernetes",
   "credentials": "default",
   "manifest": {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
     "generateName": "byos-",
     "labels": {
      "app": "byos"
     },
     "namespace": "${parameters.namespace}"
    },
    "spec": {
     "backoffLimit": 2,
     "template": {
      "spec": {
       "containers": [
        {
         "args": [
          "set +x\n\nsource /repo/secrets\n\n#bash \"$path\"\n\n\"$path\"\n\nif [ $? -eq 0 ]; then  \n\necho \"Postgress backup is sucessfull into the namespace ${parameters.namespace}\"\n\nelse\n\necho \"Postgress backup is failed\"\n\nexit 1\n\nfi"
         ],
         "command": [
          "/bin/bash",
          "+x",
          "-c"
         ],
         "env": [
          {
           "name": "path",
           "value": "/repo/postgres-backup.sh"
          }
         ],
         "image": "quay.io/opsmxpublic/postgres:postgres13.7",
         "name": "script",
         "volumeMounts": [
          {
           "mountPath": "/repo",
           "name": "repo-volume"
          },
          {
           "mountPath": "/pgdump",
           "name": "pgdump-volume"
          }
         ]
        }
       ],
       "initContainers": [
        {
         "args": [
          "\nexport ns=\"${parameters.namespace}\"\n\nexport dbpassword=`kubectl -n \"$ns\" get secret dbpassword -o yaml | yq e '.data.dbpassword' - | base64 -d`\necho \"export gituser=$gituser\" \u003e\u003e /repo/secrets\necho \"export ns=$ns\" \u003e\u003e /repo/secrets\necho \"export dbpassword=$dbpassword\" \u003e\u003e /repo/secrets\nexport host=`kubectl -n \"$ns\" get secret oes-platform-config -o yaml | yq e '.data.\"platform-local.yml\"' - | base64 -d  | yq e '.spring.datasource.url' - | grep -oP '(?\u003c=//).*(?=:)'`\nexport port=`kubectl -n \"$ns\" get secret oes-platform-config -o yaml | yq e '.data.\"platform-local.yml\"' - | base64 -d  | yq e '.spring.datasource.url' - | grep -Eo '[0-9]{1,4}'`\nexport username=`kubectl -n \"$ns\" get secret oes-platform-config -o yaml | yq e '.data.\"platform-local.yml\"' - | base64 -d  | yq e '.spring.datasource.username' -`\nexport password=`kubectl -n \"$ns\" get secret oes-platform-config -o yaml | yq e '.data.\"platform-local.yml\"' - | base64 -d  | yq e '.spring.datasource.password' -`\necho \"export host=$host\" \u003e\u003e  /repo/secrets\necho \"export port=$port\" \u003e\u003e /repo/secrets\necho \"export pguser=$username\" \u003e\u003e /repo/secrets\necho \"export dbpassword=$dbpassword\" \u003e\u003e /repo/secrets\nls -ltra /home/opsmx/scripts\ncp /home/opsmx/scripts/*.sh /repo/"
         ],
         "command": [
          "/bin/bash",
          "+x",
          "-c"
         ],
         "image": "quay.io/opsmxpublic/opsmx-custom-binaries:byossbackup_restore_scripts",
         "name": "kube",
         "volumeMounts": [
          {
           "mountPath": "/repo",
           "name": "repo-volume"
          }
         ]
        }
       ],
       "restartPolicy": "Never",
       "serviceAccountName": "byos",
       "volumes": [
        {
         "emptyDir": {},
         "name": "repo-volume"
        },
        {
         "name": "pgdump-volume",
         "persistentVolumeClaim": {
          "claimName": "pvc-${pvcname}-postgres"
         }
        }
       ]
      }
     }
    }
   },
   "name": "Run Job (Manifest)",
   "refId": "1",
   "requisiteStageRefIds": [
    "2"
   ],
   "source": "text",
   "type": "runJobManifest"
  },
  {
   "account": "default",
   "cloudProvider": "kubernetes",
   "manifests": [
    {
     "apiVersion": "v1",
     "kind": "PersistentVolumeClaim",
     "metadata": {
      "name": "pvc-${pvcname}-postgres",
      "namespace": "${parameters.namespace}"
     },
     "spec": {
      "accessModes": [
       "ReadWriteOnce"
      ],
      "resources": {
       "requests": {
        "storage": "5Gi"
       }
      },
      "volumeMode": "Filesystem"
     }
    }
   ],
   "moniker": {
    "app": "byos"
   },
   "name": "Deploy (Manifest)",
   "namespaceOverride": "",
   "refId": "2",
   "requisiteStageRefIds": [
    "3"
   ],
   "skipExpressionEvaluation": false,
   "source": "text",
   "trafficManagement": {
    "enabled": false,
    "options": {
     "enableTraffic": false
    }
   },
   "type": "deployManifest"
  },
  {
   "failOnFailedExpressions": true,
   "name": "Evaluate Variables",
   "refId": "3",
   "requisiteStageRefIds": [],
   "type": "evaluateVariables",
   "variables": [
    {
     "key": "pvcname",
     "value": "${new java.util.Date()}"
    }
   ]
  }
 ],
 "triggers": [],
 "updateTs": "1657880599000"
}
